================================================================================
                    ESTRUTURA DETALHADA DO BANCO DE DADOS
                          API CRUD MERCOCAMP v3.1.0
================================================================================

DATABASE: dbrecebimento
HOST: mercocamp.ip.odhserver.com
PORT: 33101
CHARSET: utf8mb4
ENGINE: MySQL

================================================================================
                                 TABELAS
================================================================================

📋 TOTAL DE TABELAS: 2
   • agendamento
   • produtos

================================================================================
                            TABELA: agendamento
================================================================================

DESCRIÇÃO: Controle de agendamentos com histórico de alterações
CHAVE PRIMÁRIA: ID (varchar)
TOTAL DE CAMPOS: 8

┌─────────────────────────────────────────────────────────────────────────────┐
│                           ESTRUTURA DOS CAMPOS                              │
├─────────────┬───────────────┬──────────┬─────────┬──────────────────────────┤
│ CAMPO       │ TIPO          │ NULL     │ KEY     │ DEFAULT                  │
├─────────────┼───────────────┼──────────┼─────────┼──────────────────────────┤
│ ID          │ varchar(50)   │ NO       │         │ AUTO_INCREMENT           │
│ NUM         │ tinyint       │ NO       │         │ 0                        │
│ CHNFE       │ int           │ NO       │         │ NULL                     │
│ CLI         │ int           │ NO       │         │ NULL                     │
│ VOL         │ int           │ NO       │         │ NULL                     │
│ DATA        │ date          │ NO       │         │ NULL                     │
│ STATUS      │ varchar(20)   │ NO       │         │ 0                        │
│ HIST        │ json          │ NO       │         │ NULL                     │
└─────────────┴───────────────┴──────────┴─────────┴──────────────────────────┘

DESCRIÇÃO DOS CAMPOS:
• ID: Identificador único do agendamento (chave primária)
• NUM: Número sequencial do agendamento
• CHNFE: Chave da Nota Fiscal Eletrônica (44 dígitos)
• CLI: Código do cliente
• VOL: Volume/quantidade de itens
• DATA: Data do agendamento (formato: YYYY-MM-DD)
• STATUS: Status do agendamento (ATIVO, INATIVO, CONCLUIDO, etc.)
• HIST: Histórico de alterações em formato JSON

CAMPOS OBRIGATÓRIOS:
✓ ID, NUM, CHNFE, CLI, VOL, DATA, STATUS, HIST

VALIDAÇÕES ESPECÍFICAS:
• DATA: Deve estar no formato YYYY-MM-DD
• HIST: Deve ser um JSON válido com estrutura de histórico
• STATUS: Aceita valores como 'ATIVO', 'INATIVO', 'CONCLUIDO'
• ID: Deve ser único, máximo 50 caracteres

ESTRUTURA DO CAMPO HIST (JSON):
{
  "data": "2024-01-15 10:30:00",
  "usuario": "admin",
  "alteracao": {
    "acao": "CRIACAO" | "ALTERACAO",
    "campos_criados": { ... },
    "mudancas": { "campo": "valor_antigo -> valor_novo" }
  }
}

================================================================================
                             TABELA: produtos
================================================================================

DESCRIÇÃO: Cadastro de produtos com informações de fornecedor
CHAVE PRIMÁRIA: cod_int (varchar)
TOTAL DE CAMPOS: 4

┌─────────────────────────────────────────────────────────────────────────────┐
│                           ESTRUTURA DOS CAMPOS                              │
├─────────────┬───────────────┬──────────┬─────────┬──────────────────────────┤
│ CAMPO       │ TIPO          │ NULL     │ KEY     │ DEFAULT                  │
├─────────────┼───────────────┼──────────┼─────────┼──────────────────────────┤
│ cod_int     │ varchar(50)   │ NO       │         │ ""                       │
│ cnpj_int    │ varchar(14)   │ NO       │         │ ""                       │
│ cod_forn    │ varchar(50)   │ NO       │         │ ""                       │
│ cnpj_forn   │ varchar(14)   │ NO       │         │ ""                       │
└─────────────┴───────────────┴──────────┴─────────┴──────────────────────────┘

DESCRIÇÃO DOS CAMPOS:
• cod_int: Código interno do produto (chave primária)
• cnpj_int: CNPJ da empresa interna (14 dígitos)
• cod_forn: Código do fornecedor
• cnpj_forn: CNPJ do fornecedor (14 dígitos)

CAMPOS OBRIGATÓRIOS:
✓ cod_int, cnpj_int, cod_forn, cnpj_forn

VALIDAÇÕES ESPECÍFICAS:
• cnpj_int: Deve conter exatamente 14 dígitos numéricos
• cnpj_forn: Deve conter exatamente 14 dígitos numéricos
• cod_int: Deve ser único, máximo 50 caracteres
• cod_forn: Máximo 50 caracteres

LIMPEZA AUTOMÁTICA:
• CNPJs: Caracteres especiais (., /, -) são removidos automaticamente
• Validação: Verifica se contém exatamente 14 dígitos após limpeza

================================================================================
                            OPERAÇÕES DISPONÍVEIS
================================================================================

📋 OPERAÇÕES CRUD:
• CREATE: Inserir novos registros
• READ: Consultar registros existentes
• UPDATE: Atualizar registros existentes
• DELETE: Excluir registros específicos

🔒 OPERAÇÕES BLOQUEADAS (SEGURANÇA):
• DROP TABLE: Excluir tabelas
• ALTER TABLE: Modificar estrutura
• TRUNCATE: Apagar todos os registros
• CREATE TABLE: Criar novas tabelas

✅ OPERAÇÕES PERMITIDAS:
• SELECT: Consultas de dados
• INSERT: Inserção de registros
• UPDATE: Atualização com WHERE obrigatório
• DELETE: Exclusão com WHERE obrigatório

================================================================================
                               ENDPOINTS DA API
================================================================================

📍 ENDPOINTS ESPECÍFICOS POR TABELA:

AGENDAMENTO:
• GET /table/agendamento - Listar agendamentos
• GET /table/agendamento/structure - Estrutura da tabela
• GET /table/agendamento/<ID> - Buscar por ID
• POST /table/agendamento - Criar novo (requer user_id)
• PUT /table/agendamento/<ID> - Atualizar (requer user_id)
• DELETE /table/agendamento/<ID> - Excluir agendamento

PRODUTOS:
• GET /table/produtos - Listar produtos
• GET /table/produtos/structure - Estrutura da tabela
• GET /table/produtos/<cod_int> - Buscar por código
• POST /table/produtos - Criar novo produto
• PUT /table/produtos/<cod_int> - Atualizar produto
• DELETE /table/produtos/<cod_int> - Excluir produto

================================================================================
                            EXEMPLOS DE REGISTROS
================================================================================

EXEMPLO - AGENDAMENTO:
{
  "ID": "AGE001",
  "NUM": 1,
  "CHNFE": 123456789,
  "CLI": 1001,
  "VOL": 5,
  "DATA": "2024-01-15",
  "STATUS": "ATIVO",
  "HIST": {
    "data": "2024-01-15 10:30:00",
    "usuario": "admin",
    "alteracao": {
      "acao": "CRIACAO",
      "campos_criados": {
        "ID": "AGE001",
        "CLI": 1001,
        "VOL": 5
      }
    }
  }
}

EXEMPLO - PRODUTOS:
{
  "cod_int": "PROD001",
  "cnpj_int": "12345678000195",
  "cod_forn": "FORN001",
  "cnpj_forn": "98765432000111"
}

================================================================================
                                 OBSERVAÇÕES
================================================================================

🔐 SEGURANÇA:
• Dupla validação: API + Database level
• Comandos perigosos bloqueados
• WHERE obrigatório em UPDATE/DELETE
• Logs de auditoria no campo HIST

📊 PERFORMANCE:
• Índices automáticos nas chaves primárias
• Limite padrão de 100 registros por consulta
• Consultas otimizadas com prepared statements

🛠️ MANUTENÇÃO:
• Backup recomendado antes de alterações
• Logs de erro detalhados
• Monitoramento via endpoints /health e /debug

📅 CRIADO EM: 2025-07-08
📝 VERSÃO: 3.1.0
👤 PROJETO: Mercocamp - Sistema de Agendamento

================================================================================
                                   FIM
================================================================================ 